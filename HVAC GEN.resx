<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="metroTile5.TileImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIwAAAB9CAYAAABwDouCAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAAABl0RVh0U29mdHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAARzSURBVHhe7dzB
        UdxQEIRhH6A4OwSn4AycAiEQAiEQgkNwCM7AIRACGWwG69bBVa6tHli9fhJi+A/fpWslj4Y+6NlevpzP
        Z+BqNgQqNgQqNgQqNgQqNgQqNgQqNgQqNgQqNgQqNgQqNgQqNgQqNgQqNgQqNgQqNgQqNgQqNgQqNgQq
        NgQqNgQqNkzc3Nz8kfMn88PtoiMbJrQ8CtOYDRNaHoVpzIYJLY/CNGbDhJZHYRqzYULLozCN2TCh5VGY
        xmyY0PIoTGM2TGh5FKYxGya0PArTmA0TWh6FacyGCS2PwjRmw4SWR2Eas2FCyxstzNMBjM5+VWH0uQdx
        f+4a9+7ee7FhQg80tPTL+7wHzbH8QOx8b7iqMLe3t9/NtWudlvu4++/Bhgk9EIV5hT77eHHtiNPd3d1X
        d/+t2TChh6Ewb9Dnf19cP+L5PUpjw4QehMK8YflB65qXi3uM+OXuvyUbJvQQFOYKk95nFk/u/luxYUIP
        QGGupOtmvM8sHtz9t2DDhIanMCvo2hnvM7udnGyY0PAUZoWJ7zO7nJxsmNDgFGalie8zm5+cbJjQ0BRm
        gO4x631m05OTDRMamMIM0n1mvM8sNjs52TChYSnMoInvM4tNTk42TGhQChOY+D6zycnJhgkNulthdN3Q
        n/WJTD852TChISnMsUw9OdkwoQEpzPFMOznZMKHhKMwxTTk52TChwSjMccUnJxsmNBSFOa745GTDhIai
        MMd2cru8lg0TGojCHFv0AmzDhAaiMMf17Pa4hg0TGorCHNPLjL+PsWFCg1GY45n2zwQ2TGg4CnM80778
        ZsOEhqMwx/LodjfKhgkNuGdhZnz19IjsjgZM/89UNkxoyN0K05F28fNyN4PiE5Fjw4QGpTCDtIf7y70M
        mnIicmyY0LAUZoB28E1O/+9k0KZfObFhQgNTmAHawfPlTgZt+utAbJjQwBRmJT3/rPeWqScix4YJDU1h
        VtCzz3pv2eWL+TZMaPAPWxjNsRzTl/lXGX1n0LWz3ls2ORE5Nkxo+GWJ7qFedXmf96A5Rv8OZOhbA7pu
        xnvLZicix4YJPQCFuYKumfHestuX8P+xYUIPQWHeoM/Pem/Z/Rck2jChh6Awr9BnZ723bH4icmyY0INQ
        mFfoszPeW3Y5ETk2TOhhKExBn5vx3rLbicixYUIPRGEas2FCy6MwjdkwoeVRmMZsmNDyKExjNkxoeRSm
        MRsmtDwK05gNE1oehWnMhgktj8I0ZsOElkdhGrNhQsujMI3ZMKHlUZjGbJjQ8ihMYzZMaHkUpjEbJrS8
        ocLI8sN6b6OzU5hRWt7o0j8yCjNKy6MwjdkwoeVRmMZsmNDyKExjNkxoeRSmMRsmtDwK05gNE1oehWnM
        hgktj8I0ZsOElkdhGrNhQsujMI3ZMKHlUZjGbJjQ8ihMYzZMaHkUpjEbAhUbAhUbAhUbAhUbAhUbAhUb
        AhUbAhUbAhUbAhUbAhUbAhUbAhUbAhUbAhUbAhUbAhUbAhUbAhUbAhUbAhUbAt75y18SrfTIqhT0XgAA
        AABJRU5ErkJggg==
</value>
  </data>
</root>